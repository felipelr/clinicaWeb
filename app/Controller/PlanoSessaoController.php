<?php/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. */App::uses('AuthController', 'Controller');App::uses('PlanoSessao', 'Model');App::uses('TipoFinanceiro', 'Model');App::uses('CategoriaAula', 'Model');/** * CakePHP PlanoSessaoController * @author Felipe */class PlanoSessaoController extends AuthController {    public function index() {    }    public function cadastrar() {        if ($this->request->is("post")) {            $this->layout = "ajax";            $this->autoRender = false;            $data = $this->request->data;            if (isset($data['PlanoSessao']['valor'])) {                $str_explode = explode(',', $data['PlanoSessao']['valor']);                if (isset($str_explode[1])) {                    $data['PlanoSessao']['valor'] = str_replace('.', '', $str_explode[0]) . '.' . $str_explode[1];                }                if ($data['PlanoSessao']['valor_referente'] == 'PARCELA') {                    $data['PlanoSessao']['sessoes_mensal'] = $data['PlanoSessao']['quantidade_sessoes'];                    $data['PlanoSessao']['valor_sessao'] = $data['PlanoSessao']['valor'] / $data['PlanoSessao']['quantidade_sessoes'];                    $data['PlanoSessao']['valor'] = $data['PlanoSessao']['valor'] * $data['PlanoSessao']['quantidade_meses'];                    $data['PlanoSessao']['quantidade_sessoes'] = $data['PlanoSessao']['quantidade_sessoes'] * $data['PlanoSessao']['quantidade_meses'];                } else {                    $data['PlanoSessao']['sessoes_mensal'] = $data['PlanoSessao']['quantidade_sessoes'];                    $data['PlanoSessao']['valor_sessao'] = $data['PlanoSessao']['valor'] / $data['PlanoSessao']['quantidade_sessoes'];                }            }            unset($data['PlanoSessao']['valor_referente']);            $planoSessao = new PlanoSessao();            $planoSessao->save($data);            $layout = isset($this->request->query['layout']) ? $this->request->query['layout'] : null;            if (isset($layout)) {                $this->response->body(json_encode($planoSessao->retornarPorId($planoSessao->id)));            } else {                $this->Session->setFlash(__("Cadastro concluído com sucesso!"), 'sucesso');                return $this->redirect(array("controller" => "plano_sessao", "action" => "index"));            }        }        if ($this->request->is("get")) {            $layout = isset($this->request->query['layout']) ? $this->request->query['layout'] : null;            if (isset($layout)) {                $this->layout = "ajax";            }            $tipoFinanceiro = new TipoFinanceiro();            $financeiros_ = $tipoFinanceiro->retornarTodos();            $this->set('TipoFinanceiros', $financeiros_);        }    }    public function alterar($idplanosessao) {        $planoSessao = new PlanoSessao();        if ($this->request->is("get")) {            if (isset($idplanosessao)) {                $tipoFinanceiro = new TipoFinanceiro();                $categoriaAula = new CategoriaAula();                $planoSessao_ = $planoSessao->retornarPorId($idplanosessao);                $categorias = $categoriaAula->retornarTodos();                $planoSessao_['valor'] = number_format($planoSessao_['valor'], 2, ",", ".");                $financeiros_ = $tipoFinanceiro->retornarTodos();                $this->set("categorias", $categorias);                $this->set('TipoFinanceiros', $financeiros_);                $this->set("PlanoSessao", $planoSessao_);            } else {                return $this->redirect(array("controller" => "plano_sessao", "action" => "index"));            }        }        if ($this->request->is("post")) {            $data = $this->request->data;            if (isset($data['PlanoSessao']['valor'])) {                $str_explode = explode(',', $data['PlanoSessao']['valor']);                if (isset($str_explode[1])) {                    $data['PlanoSessao']['valor'] = str_replace('.', '', $str_explode[0]) . '.' . $str_explode[1];                }                if ($data['PlanoSessao']['valor_referente'] == 'PARCELA') {                    $data['PlanoSessao']['sessoes_mensal'] = $data['PlanoSessao']['quantidade_sessoes'];                    $data['PlanoSessao']['valor_sessao'] = $data['PlanoSessao']['valor'] / $data['PlanoSessao']['quantidade_sessoes'];                    $data['PlanoSessao']['valor'] = $data['PlanoSessao']['valor'] * $data['PlanoSessao']['quantidade_meses'];                    $data['PlanoSessao']['quantidade_sessoes'] = $data['PlanoSessao']['quantidade_sessoes'] * $data['PlanoSessao']['quantidade_meses'];                }            }            unset($data['PlanoSessao']['valor_referente']);            $planoSessao->save($data);            $this->Session->setFlash(__("Alteração concluída com sucesso!"), 'sucesso');            return $this->redirect(array("controller" => "plano_sessao", "action" => "index"));        }    }    public function excluir() {        $idplanosessao = $this->request->data['idplanosessao'];        $this->autoRender = false;        $this->layout = null;        if ($this->request->is("post")) {            if (isset($idplanosessao)) {                $planoSessao = new PlanoSessao();                $planoSessao->excluir($idplanosessao);                $this->Session->setFlash(__("Exluído com sucesso!"), 'sucesso');            }        }        return $this->redirect(array("controller" => "plano_sessao", "action" => "index"));    }    public function ajax() {        $this->layout = null;        $this->autoRender = false;        $columns = (isset($this->request->data["columns"])) ? $this->request->data["columns"] : null;        $order = (isset($this->request->data["order"])) ? $this->request->data["order"] : null;        $draw = (isset($this->request->data["draw"])) ? $this->request->data["draw"] : 0;        $start = (isset($this->request->data["start"])) ? $this->request->data["start"] : 0;        $length = (isset($this->request->data["length"])) ? $this->request->data["length"] : 0;        $search = (isset($this->request->data["search"]["value"]) && !empty($this->request->data["search"]["value"])) ? $this->request->data["search"]["value"] : null;        $ordenacao = $columns[$order[0]["column"]]["data"] . " " . strtoupper($order[0]["dir"]);        $content = new PlanoSessao();        $contents = $content->listarJQuery($search, $start, $length, $ordenacao);        $dados = array();        if (isset($contents)) {            foreach ($contents as $_content) {                $_content['p']['valor'] = 'R$ ' . number_format($_content['p']['valor'], 2, ",", ".");                $dados[] = $_content;            }        }        $this->response->body(json_encode(                array(                    "draw" => $draw,                    "recordsTotal" => (int) $content->totalRegistro(),                    "recordsFiltered" => (int) $content->totalRegistroFiltrado($search),                    "data" => $dados                )        ));    }}